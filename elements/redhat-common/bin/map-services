#!/usr/bin/env python
# dib-lint: disable=indent
# Copyright 2012 Hewlett-Packard Development Company, L.P.
# Copyright 2014 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

from __future__ import print_function
import os
import sys

# Manually maintained for brevity; consider making this compiled from
# distromatch or other rich data sources.
# TripleO service name on the left, Fedora/RHEL on the right.
service_map = {
    'apache2': 'httpd',
    'ceilometer-api': 'openstack-ceilometer-api',
    'ceilometer-agent-central': 'openstack-ceilometer-central',
    'ceilometer-agent-compute': 'openstack-ceilometer-compute',
    'ceilometer-agent-notification': 'openstack-ceilometer-notification',
    'ceilometer-collector': 'openstack-ceilometer-collector',
    'cinder-api': 'openstack-cinder-api',
    'cinder-backup': 'openstack-cinder-backup',
    'cinder-scheduler': 'openstack-cinder-scheduler',
    'cinder-volume': 'openstack-cinder-volume',
    'glance-api': 'openstack-glance-api',
    'glance-reg': 'openstack-glance-registry',
    'heat-api': 'openstack-heat-api',
    'heat-api-cfn': 'openstack-heat-api-cfn',
    'heat-api-cloudwatch': 'openstack-heat-api-cloudwatch',
    'heat-engine': 'openstack-heat-engine',
    'ironic-api': 'openstack-ironic-api',
    'ironic-conductor': 'openstack-ironic-conductor',
    'keystone': 'openstack-keystone',
    'libvirt-bin': 'libvirtd',
    'mysql': ['mysqld', 'mariadb'],
    'nova-conductor': 'openstack-nova-conductor',
    'nova-api': 'openstack-nova-api',
    'nova-cert': 'openstack-nova-cert',
    'nova-scheduler': 'openstack-nova-scheduler',
    'nova-consoleauth': 'openstack-nova-consoleauth',
    'nova-compute': 'openstack-nova-compute',
    'nova-novncproxy': 'openstack-nova-novncproxy',
    'openvswitch-switch': 'openvswitch',
    'rsync': 'rsyncd',
    'swift-proxy': 'openstack-swift-proxy',
    'swift-account': 'openstack-swift-account',
    'swift-account-auditor': 'openstack-swift-account-auditor',
    'swift-account-reaper': 'openstack-swift-account-reaper',
    'swift-account-replicator': 'openstack-swift-account-replicator',
    'swift-container': 'openstack-swift-container',
    'swift-container-auditor': 'openstack-swift-container-auditor',
    'swift-container-replicator': 'openstack-swift-container-replicator',
    'swift-container-updater': 'openstack-swift-container-updater',
    'swift-object': 'openstack-swift-object',
    'swift-object-auditor': 'openstack-swift-object-auditor',
    'swift-object-replicator': 'openstack-swift-object-replicator',
    'swift-object-updater': 'openstack-swift-object-updater',
    'tgt': 'tgtd',
}

print("WARNING: map-services has been deprecated.  "
      "Please use the svc-map element.", file=sys.stderr)

for arg in sys.argv[1:]:
    # We need to support the service name being different when installing from
    # source vs. packages. So, if the requested service file already exists,
    # just use that.
    if os.path.exists('/lib/systemd/system/%s.service' % arg):
        print(arg)
    else:
        mapping = service_map.get(arg, arg)
        # Handle cases where a service may map to multiple names depending on
        # which specific distribution we're using.
        if isinstance(mapping, list):
            for name in mapping:
                if os.path.exists('/lib/systemd/system/%s.service' % name):
                    print(name)
                    break
            else:
                # We didn't find a match for any of the mappings.
                print(arg)
        else:
            print(mapping)
sys.exit(0)
